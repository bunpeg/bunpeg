openapi: 3.1.0
info:
  title: Bunpeg API
  version: 0.0.1
  description: A platform for performing FFmpeg operations via API endpoints.

servers:
  - url: http://api.bunpeg.io

paths:
  /upload:
    post:
      summary: Upload a media file, currently you can upload video or audio of up to 500MB
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Upload successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    type: string

  /trim:
    post:
      summary: Trim a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fileId
                - start
                - duration
              properties:
                fileId:
                  type: string
                start:
                  type: string
                  description: Start time in format "00:00:10"
                duration:
                  type: string
                  description: Duration to keep (e.g. "5")
      responses:
        '200':
          description: Trim started
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string

  /cut-end:
    post:
      summary: Remove seconds from the end of a media file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fileId
                - duration
              properties:
                fileId:
                  type: string
                duration:
                  type: string
                  description: Seconds to remove from the end (e.g. "5")
      responses:
        '200':
          description: Cut-end started
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string

  /extract-audio:
    post:
      summary: Extract audio from a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fileId
              properties:
                fileId:
                  type: string
      responses:
        '200':
          description: Audio extraction started
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string

  /transcode:
    post:
      summary: Transcode a video to a different format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fileId
                - format
              properties:
                fileId:
                  type: string
                format:
                  type: string
                  description: Target format (e.g. "mp4", "webm")
      responses:
        '200':
          description: Transcoding started
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string

  /chain:
    post:
      summary: Chain multiple FFmpeg operations together
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fileId
                - operations
              properties:
                fileId:
                  type: string
                operations:
                  type: array
                  items:
                    oneOf:
                      - type: object
                        required: [type, start, duration]
                        properties:
                          type:
                            type: string
                            enum: [trim]
                          start:
                            type: string
                          duration:
                            type: string
                      - type: object
                        required: [type, duration]
                        properties:
                          type:
                            type: string
                            enum: [cut-end]
                          duration:
                            type: string
                            description: Seconds to trim from end
                      - type: object
                        required: [type]
                        properties:
                          type:
                            type: string
                            enum: [extract-audio]
                      - type: object
                        required: [type, format]
                        properties:
                          type:
                            type: string
                            enum: [transcode]
                          format:
                            type: string
      responses:
        '200':
          description: Chained task started
          content:
            application/json:
              schema:
                type: object
                properties:
                  taskId:
                    type: string

  /status/{fileId}:
    get:
      summary: Get status for a file's processing tasks
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File status
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    type: string
                  status:
                    type: string
                    enum: [pending, completed, failed, unreachable, not-found]

  /status/{taskId}:
    get:
      summary: Get task status
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [pending, complete, error]
                  error:
                    type: string
                    nullable: true

  /meta/{fileId}:
    get:
      summary: Get metadata for a file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  duration:
                    type: number
                  bitrate:
                    type: number
                  resolution:
                    type: object
                    properties:
                      width:
                        type: number
                      height:
                        type: number
                  sampleRate:
                    type: number
                  channels:
                    type: number

  /download/{fileId}:
    get:
      summary: Download original file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Original file download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /output/{fileId}:
    get:
      summary: Download processed file
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Output file download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /delete/{fileId}:
    delete:
      summary: Delete a file and all its tasks
      parameters:
        - in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    type: string

  /ffmpeg/version:
    get:
      summary: Get the version of FFmpeg used by the server
      responses:
        '200':
          description: FFmpeg version string
          content:
            text/plain:
              schema:
                type: string
