openapi: 3.0.0
info:
  title: Bunpeg Media API
  version: 0.0.1
  description: API for media operations using FFmpeg via Bunpeg

servers:
  - url: https://api.bunpeg.io

paths:
  /upload:
    post:
      summary: Upload a media file, currently you can upload video or audio of up to 500MB
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        '200':
          description: Upload successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    type: string

  /files:
    get:
      summary: Get the all the files information from DB
      responses:
        '200':
          description: Files information retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /files/{fileId}:
    get:
      summary: Get the file information from DB
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File information retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /tasks:
    get:
      summary: Get the all the tasks information from DB
      responses:
        '200':
          description: Tasks information retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /meta/{fileId}:
    get:
      summary: Get metadata for a file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File metadata retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /status/{fileId}:
    get:
      summary: Get processing status for a file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    type: string
                  status:
                    type: string
                    enum: [not-found, pending, completed, failed]

  /output/{fileId}:
    get:
      summary: Get the output file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File retrieved successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /download/{fileId}:
    get:
      summary: Download a file and delete it after
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File downloaded successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /delete/{fileId}:
    delete:
      summary: Delete a file and its associated tasks
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    type: string

  /transcode:
    post:
      summary: Transcode a video to a different format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranscodeSchema'
      responses:
        '200':
          description: Transcode successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /resize-video:
    post:
      summary: Resize a video to different dimensions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeVideoSchema'
      responses:
        '200':
          description: Resize successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /trim:
    post:
      summary: Trim a video segment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrimSchema'
      responses:
        '200':
          description: Trim successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /trim-end:
    post:
      summary: Cut a segment from the end of a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CutEndSchema'
      responses:
        '200':
          description: Segment removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /extract-audio:
    post:
      summary: Extract audio from a video file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractAudioSchema'
      responses:
        '200':
          description: Audio extracted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /remove-audio:
    post:
      summary: Remove audio track from a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAudioSchema'
      responses:
        '200':
          description: Audio removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /add-audio:
    post:
      summary: Add an audio track to a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAudioTrackSchema'
      responses:
        '200':
          description: Audio added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /merge:
    post:
      summary: Merge multiple media files
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeMediaSchema'
      responses:
        '200':
          description: Files merged successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /extract-thumbnail:
    post:
      summary: Extract a thumbnail from a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractThumbnailSchema'
      responses:
        '200':
          description: Thumbnail extracted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /chain:
    post:
      summary: Chain multiple operations on a file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChainSchema'
      responses:
        '200':
          description: All operations queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

components:
  schemas:
    TrimSchema:
      type: object
      required: [fileId, start, duration, outputFormat]
      properties:
        fileId:
          type: string
        start:
          type: number
        duration:
          type: number
        outputFormat:
          type: string
          enum: [mp4, mkv, webm, mov, avi]

    CutEndSchema:
      type: object
      required: [fileId, duration, outputFormat]
      properties:
        fileId:
          type: string
        duration:
          type: number
        outputFormat:
          type: string
          enum: [mp4, mkv, webm, mov, avi]

    TranscodeSchema:
      type: object
      required: [fileId, format]
      properties:
        fileId:
          type: string
        format:
          type: string
          enum: [mp4, mkv, webm, mov, avi]

    ExtractAudioSchema:
      type: object
      required: [fileId, audioFormat]
      properties:
        fileId:
          type: string
        audioFormat:
          type: string
          enum: [mp3, m4a, aac, flac, wav, opus]

    RemoveAudioSchema:
      type: object
      required: [fileId, outputFormat]
      properties:
        fileId:
          type: string
        outputFormat:
          type: string
          enum: [mp4, mkv, webm, mov, avi]

    AddAudioTrackSchema:
      type: object
      required: [videoFileId, audioFileId, outputFormat]
      properties:
        videoFileId:
          type: string
        audioFileId:
          type: string
        outputFormat:
          type: string
          enum: [mp4, mkv, webm, mov, avi]

    MergeMediaSchema:
      type: object
      required: [fileIds, outputFormat]
      properties:
        fileIds:
          type: array
          items:
            type: string
          minItems: 2
        outputFormat:
          type: string

    ResizeVideoSchema:
      type: object
      required: [fileId, width, height, outputFormat]
      properties:
        fileId:
          type: string
        width:
          type: integer
          minimum: 1
        height:
          type: integer
          minimum: 1
        outputFormat:
          type: string
          enum: [mp4, mkv, webm, mov, avi]

    ExtractThumbnailSchema:
      type: object
      required: [fileId, timestamp, imageFormat]
      properties:
        fileId:
          type: string
        timestamp:
          type: string
        imageFormat:
          type: string
          enum: [jpg, jpeg, png, webp, gif, avif, svg]

    ChainSchema:
      type: object
      required: [fileId, operations]
      properties:
        fileId:
          type: string
        operations:
          type: array
          minItems: 1
          items:
            oneOf:
              - $ref: '#/components/schemas/TrimSchema'
              - $ref: '#/components/schemas/CutEndSchema'
              - $ref: '#/components/schemas/ExtractAudioSchema'
              - $ref: '#/components/schemas/TranscodeSchema'
              - $ref: '#/components/schemas/MergeMediaSchema'
              - $ref: '#/components/schemas/AddAudioTrackSchema'
              - $ref: '#/components/schemas/RemoveAudioSchema'
              - $ref: '#/components/schemas/ResizeVideoSchema'
              - $ref: '#/components/schemas/ExtractThumbnailSchema'
