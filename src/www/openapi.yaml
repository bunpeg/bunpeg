openapi: 3.0.0
info:
  title: Bunpeg Media API
  version: 0.0.1
  description: API for media operations using FFmpeg via Bunpeg

servers:
  - url: https://api.bunpeg.io

paths:
  /upload:
    post:
      summary: Upload
      description: Upload a media file, currently you can upload video or audio of up to 500MB
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        '200':
          description: Upload successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    type: string

  /files:
    get:
      summary: Get files
      description: Get the all the files information from DB
      responses:
        '200':
          description: Files information retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /files/{fileId}:
    get:
      summary: Get file
      description: Get the file information from DB
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File information retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /tasks:
    get:
      summary: Tasks
      description: Get the all the tasks information from DB
      responses:
        '200':
          description: Tasks information retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /meta/{fileId}:
    get:
      summary: Metadata
      description: Get metadata for a file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File metadata retrieved successfully
          content:
            application/json:
              schema:
                type: object

  /status/{fileId}:
    get:
      summary: Status
      description: Get processing status for a file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    type: string
                  status:
                    type: string
                    enum: [not-found, pending, completed, failed]

  /output/{fileId}:
    get:
      summary: Output
      description: Get a preview of the file without deleting it
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File retrieved successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /download/{fileId}:
    get:
      summary: Download
      description: Download a file and delete it after
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File downloaded successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /delete/{fileId}:
    delete:
      summary: Delete
      description: Delete a file and its associated tasks
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileId:
                    type: string

  /transcode:
    post:
      summary: Transcode
      description: Transcode a video to a different format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranscodeSchema'
      responses:
        '200':
          description: Transcode successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /resize-video:
    post:
      summary: Resize
      description: Resize a video to different dimensions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResizeVideoSchema'
      responses:
        '200':
          description: Resize successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /trim:
    post:
      summary: Trim
      description: Trim a video segment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrimSchema'
      responses:
        '200':
          description: Trim successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /trim-end:
    post:
      summary: Trim end
      description: Cut a segment from the end of a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CutEndSchema'
      responses:
        '200':
          description: Segment removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /extract-audio:
    post:
      summary: Extract audio
      description: Extract audio from a video file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractAudioSchema'
      responses:
        '200':
          description: Audio extracted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /remove-audio:
    post:
      summary: Remove audio
      description: Remove audio track from a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveAudioSchema'
      responses:
        '200':
          description: Audio removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /add-audio:
    post:
      summary: Add audio
      description: Add an audio track to a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAudioTrackSchema'
      responses:
        '200':
          description: Audio added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /merge:
    post:
      summary: Merge
      description: Merge multiple media files
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeMediaSchema'
      responses:
        '200':
          description: Files merged successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /extract-thumbnail:
    post:
      summary: Extract thumbnail
      description: Extract a thumbnail from a video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractThumbnailSchema'
      responses:
        '200':
          description: Thumbnail extracted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /chain:
    post:
      summary: Chain
      description: Chain multiple operations on a file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChainSchema'
      responses:
        '200':
          description: A confirmation that the tasks were created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /bulk:
    post:
      summary: Bulk
      description: Create multiples of the same operation for different files
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkSchema'
      responses:
        '200':
          description: A confirmation that the tasks were created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

components:
  schemas:
    TrimParams:
      type: object
      required: [ start, duration, outputFormat ]
      properties:
        start:
          type: number
        duration:
          type: number
        outputFormat:
          type: string
          enum: [ mp4, mkv, webm, mov, avi ]
        mode:
          type: string
          enum: [ append, replace ]

    CutEndParams:
      type: object
      required: [ duration, outputFormat ]
      properties:
        duration:
          type: number
        outputFormat:
          type: string
          enum: [ mp4, mkv, webm, mov, avi ]
        mode:
          type: string
          enum: [ append, replace ]

    TranscodeParams:
      type: object
      required: [ format ]
      properties:
        format:
          type: string
          enum: [ mp4, mkv, webm, mov, avi ]
        mode:
          type: string
          enum: [ append, replace ]

    ExtractAudioParams:
      type: object
      required: [ audioFormat ]
      properties:
        audioFormat:
          type: string
          enum: [ mp3, m4a, aac, flac, wav, opus ]
        mode:
          type: string
          enum: [ append, replace ]

    RemoveAudioParams:
      type: object
      required: [ outputFormat ]
      properties:
        outputFormat:
          type: string
          enum: [ mp4, mkv, webm, mov, avi ]
        mode:
          type: string
          enum: [ append, replace ]

    ResizeVideoParams:
      type: object
      required: [ width, height, outputFormat ]
      properties:
        width:
          type: integer
          minimum: 1
        height:
          type: integer
          minimum: 1
        outputFormat:
          type: string
          enum: [mp4, mkv, webm, mov, avi]
        mode:
          type: string
          enum: [ append, replace ]

    ExtractThumbnailParams:
      type: object
      required: [ timestamp, imageFormat ]
      properties:
        timestamp:
          type: string
        imageFormat:
          type: string
          enum: [ jpg, jpeg, png, webp, gif, avif, svg ]
        mode:
          type: string
          enum: [ append, replace ]

    TrimSchema:
      allOf:
        - $ref: '#/components/schemas/TrimParams'
        - type: object
          required: [ fileId ]
          properties:
            fileId:
              type: string

    CutEndSchema:
      allOf:
        - $ref: '#/components/schemas/CutEndParams'
        - type: object
          required: [ fileId ]
          properties:
            fileId:
              type: string

    TranscodeSchema:
      allOf:
        - $ref: '#/components/schemas/TranscodeParams'
        - type: object
          required: [ fileId ]
          properties:
            fileId:
              type: string

    ExtractAudioSchema:
      allOf:
        - $ref: '#/components/schemas/ExtractAudioParams'
        - type: object
          required: [ fileId ]
          properties:
            fileId:
              type: string

    RemoveAudioSchema:
      allOf:
        - $ref: '#/components/schemas/RemoveAudioParams'
        - type: object
          required: [ fileId ]
          properties:
            fileId:
              type: string

    AddAudioTrackSchema:
      type: object
      required: [videoFileId, audioFileId, outputFormat]
      properties:
        videoFileId:
          type: string
        audioFileId:
          type: string
        outputFormat:
          type: string
          enum: [mp4, mkv, webm, mov, avi]

    MergeMediaSchema:
      type: object
      required: [fileIds, outputFormat]
      properties:
        fileIds:
          type: array
          items:
            type: string
          minItems: 2
        outputFormat:
          type: string

    ResizeVideoSchema:
      allOf:
        - $ref: '#/components/schemas/ResizeVideoParams'
        - type: object
          required: [ fileId ]
          properties:
            fileId:
              type: string

    ExtractThumbnailSchema:
      allOf:
        - $ref: '#/components/schemas/ExtractThumbnailParams'
        - type: object
          required: [ fileId ]
          properties:
            fileId:
              type: string

    ChainSchema:
      type: object
      required: [fileId, operations]
      properties:
        fileId:
          type: string
        operations:
          type: array
          minItems: 1
          items:
            oneOf:
              - $ref: '#/components/schemas/TrimParams'
              - $ref: '#/components/schemas/CutEndParams'
              - $ref: '#/components/schemas/ExtractAudioParams'
              - $ref: '#/components/schemas/TranscodeParams'
              - $ref: '#/components/schemas/RemoveAudioParams'
              - $ref: '#/components/schemas/ResizeVideoParams'
              - $ref: '#/components/schemas/ExtractThumbnailParams'

    BulkSchema:
      type: object
      required: [fileIds, operation]
      properties:
        fileIds:
          type: array
          minItems: 1
          items:
            type: string
        operation:
          oneOf:
            - $ref: '#/components/schemas/TrimParams'
            - $ref: '#/components/schemas/CutEndParams'
            - $ref: '#/components/schemas/ExtractAudioParams'
            - $ref: '#/components/schemas/TranscodeParams'
            - $ref: '#/components/schemas/RemoveAudioParams'
            - $ref: '#/components/schemas/ResizeVideoParams'
            - $ref: '#/components/schemas/ExtractThumbnailParams'
